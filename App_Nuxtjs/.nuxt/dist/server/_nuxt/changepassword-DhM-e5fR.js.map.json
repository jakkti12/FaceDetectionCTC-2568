{"file":"changepassword-DhM-e5fR.js","mappings":"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":["_createVNode"],"sources":["../../../../node_modules/vuetify/lib/components/VForm/VForm.mjs","../../../../pages/settings/changepassword.vue"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { createForm, makeFormProps } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVFormProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeFormProps()\n}, 'VForm');\nexport const VForm = genericComponent()({\n  name: 'VForm',\n  props: makeVFormProps(),\n  emits: {\n    'update:modelValue': val => true,\n    submit: e => true\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const form = createForm(props);\n    const formRef = ref();\n    function onReset(e) {\n      e.preventDefault();\n      form.reset();\n    }\n    function onSubmit(_e) {\n      const e = _e;\n      const ready = form.validate();\n      e.then = ready.then.bind(ready);\n      e.catch = ready.catch.bind(ready);\n      e.finally = ready.finally.bind(ready);\n      emit('submit', e);\n      if (!e.defaultPrevented) {\n        ready.then(_ref2 => {\n          let {\n            valid\n          } = _ref2;\n          if (valid) {\n            formRef.value?.submit();\n          }\n        });\n      }\n      e.preventDefault();\n    }\n    useRender(() => _createVNode(\"form\", {\n      \"ref\": formRef,\n      \"class\": ['v-form', props.class],\n      \"style\": props.style,\n      \"novalidate\": true,\n      \"onReset\": onReset,\n      \"onSubmit\": onSubmit\n    }, [slots.default?.(form)]));\n    return forwardRefs(form, formRef);\n  }\n});\n//# sourceMappingURL=VForm.mjs.map","<template>\r\n    <v-app class=\"change-password container mt-5\">\r\n      <div class=\"text-center\">\r\n        <hr />\r\n        <h1 class=\"text-h5 font-weight-bold\">เปลี่ยนรหัสผ่าน</h1>\r\n        <hr />\r\n      </div>\r\n  \r\n      <v-main>\r\n        <!-- ช่องกรอกรหัสเดิม -->\r\n        <v-form>\r\n          <v-input>\r\n            <v-text-field \r\n              v-model=\"originalPassword\" \r\n              :type=\"showOriginalPassword ? 'text' : 'password'\" \r\n              label=\"กรอกรหัสผ่านเดิม\" \r\n              outlined \r\n              dense \r\n              required \r\n            >\r\n              <template v-slot:append>\r\n                <v-icon @click=\"toggleShowOriginalPassword\">\r\n                  {{ showOriginalPassword ? 'mdi-eye-off' : 'mdi-eye' }}\r\n                </v-icon>\r\n              </template>\r\n            </v-text-field>\r\n          </v-input>\r\n  \r\n          <!-- ช่องกรอกรหัสใหม่ -->\r\n          <v-input>\r\n            <v-text-field \r\n              v-model=\"newPassword\" \r\n              :type=\"showNewPassword ? 'text' : 'password'\" \r\n              label=\"กรอกรหัสผ่านใหม่\" \r\n              outlined \r\n              dense \r\n              required \r\n            >\r\n              <template v-slot:append>\r\n                <v-icon @click=\"toggleShowNewPassword\">\r\n                  {{ showNewPassword ? 'mdi-eye-off' : 'mdi-eye' }}\r\n                </v-icon>\r\n              </template>\r\n            </v-text-field>\r\n          </v-input>\r\n  \r\n          <!-- ช่องยืนยันรหัสใหม่ -->\r\n          <v-input>\r\n            <v-text-field \r\n              v-model=\"confirmPassword\" \r\n              :type=\"showConfirmPassword ? 'text' : 'password'\" \r\n              label=\"ยืนยันรหัสผ่านใหม่\" \r\n              outlined \r\n              dense \r\n              required \r\n            >\r\n              <template v-slot:append>\r\n                <v-icon @click=\"toggleShowConfirmPassword\">\r\n                  {{ showConfirmPassword ? 'mdi-eye-off' : 'mdi-eye' }}\r\n                </v-icon>\r\n              </template>\r\n            </v-text-field>\r\n          </v-input>\r\n  \r\n          <!-- ปุ่มยืนยันการเปลี่ยนรหัส -->\r\n          <v-btn\r\n            color=\"primary\"\r\n            class=\"mt-4\"\r\n            @click=\"changePassword\"\r\n            :disabled=\"!isFormValid\"\r\n          >\r\n            ยืนยันการเปลี่ยนรหัส\r\n          </v-btn>\r\n        </v-form>\r\n      </v-main>\r\n    </v-app>\r\n</template>\r\n  \r\n<script setup>\r\nimport { useRouter , useRoute  } from 'vue-router';\r\nimport { ref, computed } from 'vue'\r\nimport axios from 'axios'\r\n\r\n// เรียกใช้งาน route และ อ่านค่า routeParams\r\nconst router = useRouter()\r\nconst route = useRoute()\r\n\r\n// ตัวแปรเก็บค่ารหัสผ่าน\r\nconst originalPassword = ref('')\r\nconst newPassword = ref('')\r\nconst confirmPassword = ref('')\r\n\r\n// ตัวแปรเพื่อควบคุมการแสดงรหัสผ่าน\r\nconst showOriginalPassword = ref(false)\r\nconst showNewPassword = ref(false)\r\nconst showConfirmPassword = ref(false)\r\n\r\n// คำนวณความถูกต้องของฟอร์ม\r\nconst isFormValid = computed(() => {\r\nreturn originalPassword.value && newPassword.value && confirmPassword.value && newPassword.value === confirmPassword.value\r\n})\r\n\r\n// ฟังก์ชันในการเปลี่ยนรหัส\r\nconst changePassword = async () => {\r\n  if (newPassword.value !== confirmPassword.value) {\r\n    alert(\"รหัสผ่านใหม่และยืนยันรหัสผ่านไม่ตรงกัน\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const token = localStorage.getItem('token'); // รับ token จาก localStorage\r\n\r\n    // เรียก API เปลี่ยนรหัสผ่าน\r\n    const response = await axios.post(\r\n      'http://localhost:7000/settings/change-password',\r\n      {\r\n        newPassword: newPassword.value,\r\n        originalPassword: originalPassword.value, // ส่งรหัสผ่านเดิม\r\n      },\r\n      {\r\n        headers: {\r\n          authorization: token, // ส่ง token ผ่าน headers\r\n        },\r\n      }\r\n    );\r\n\r\n    alert(response.data.message); // แสดงข้อความตอบกลับ\r\n    router.push('setting')\r\n  } catch (error) {\r\n    // ตรวจสอบและแสดง error ที่ได้รับจาก backend\r\n    const message = error.response?.data?.message || error.message;\r\n    alert(`เกิดข้อผิดพลาด: ${message}`);\r\n  }\r\n};\r\n\r\n\r\n// ฟังก์ชันสำหรับสลับการแสดงรหัสผ่าน\r\nconst toggleShowOriginalPassword = () => {\r\nshowOriginalPassword.value = !showOriginalPassword.value\r\n}\r\n\r\nconst toggleShowNewPassword = () => {\r\nshowNewPassword.value = !showNewPassword.value\r\n}\r\n\r\nconst toggleShowConfirmPassword = () => {\r\nshowConfirmPassword.value = !showConfirmPassword.value\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.change-password {\r\n.text-password {\r\n    font-size: 18px;\r\n}\r\n\r\n.input-password {\r\n    max-width: 400px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.v-btn {\r\n    width: 100%;\r\n}\r\n}\r\n</style>"],"version":3}